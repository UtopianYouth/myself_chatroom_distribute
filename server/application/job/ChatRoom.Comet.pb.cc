// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ChatRoom.Comet.proto

#include "ChatRoom.Comet.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG
namespace ChatRoom {
namespace Comet {
constexpr PushMsgReq::PushMsgReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : keys_()
  , proto_(nullptr)
  , protoop_(0){}
struct PushMsgReqDefaultTypeInternal {
  constexpr PushMsgReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PushMsgReqDefaultTypeInternal() {}
  union {
    PushMsgReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PushMsgReqDefaultTypeInternal _PushMsgReq_default_instance_;
constexpr PushMsgReply::PushMsgReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct PushMsgReplyDefaultTypeInternal {
  constexpr PushMsgReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~PushMsgReplyDefaultTypeInternal() {}
  union {
    PushMsgReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PushMsgReplyDefaultTypeInternal _PushMsgReply_default_instance_;
constexpr BroadcastReq::BroadcastReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : proto_(nullptr)
  , protoop_(0)
  , speed_(0){}
struct BroadcastReqDefaultTypeInternal {
  constexpr BroadcastReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BroadcastReqDefaultTypeInternal() {}
  union {
    BroadcastReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BroadcastReqDefaultTypeInternal _BroadcastReq_default_instance_;
constexpr BroadcastReply::BroadcastReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BroadcastReplyDefaultTypeInternal {
  constexpr BroadcastReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BroadcastReplyDefaultTypeInternal() {}
  union {
    BroadcastReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BroadcastReplyDefaultTypeInternal _BroadcastReply_default_instance_;
constexpr BroadcastRoomReq::BroadcastRoomReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : roomid_(&::PROTOBUF_NAMESPACE_ID::internal::fixed_address_empty_string)
  , proto_(nullptr){}
struct BroadcastRoomReqDefaultTypeInternal {
  constexpr BroadcastRoomReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BroadcastRoomReqDefaultTypeInternal() {}
  union {
    BroadcastRoomReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BroadcastRoomReqDefaultTypeInternal _BroadcastRoomReq_default_instance_;
constexpr BroadcastRoomReply::BroadcastRoomReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct BroadcastRoomReplyDefaultTypeInternal {
  constexpr BroadcastRoomReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~BroadcastRoomReplyDefaultTypeInternal() {}
  union {
    BroadcastRoomReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT BroadcastRoomReplyDefaultTypeInternal _BroadcastRoomReply_default_instance_;
constexpr RoomsReq::RoomsReq(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RoomsReqDefaultTypeInternal {
  constexpr RoomsReqDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomsReqDefaultTypeInternal() {}
  union {
    RoomsReq _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomsReqDefaultTypeInternal _RoomsReq_default_instance_;
constexpr RoomsReply_RoomsEntry_DoNotUse::RoomsReply_RoomsEntry_DoNotUse(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized){}
struct RoomsReply_RoomsEntry_DoNotUseDefaultTypeInternal {
  constexpr RoomsReply_RoomsEntry_DoNotUseDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomsReply_RoomsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RoomsReply_RoomsEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomsReply_RoomsEntry_DoNotUseDefaultTypeInternal _RoomsReply_RoomsEntry_DoNotUse_default_instance_;
constexpr RoomsReply::RoomsReply(
  ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized)
  : rooms_(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}){}
struct RoomsReplyDefaultTypeInternal {
  constexpr RoomsReplyDefaultTypeInternal()
    : _instance(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized{}) {}
  ~RoomsReplyDefaultTypeInternal() {}
  union {
    RoomsReply _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT RoomsReplyDefaultTypeInternal _RoomsReply_default_instance_;
}  // namespace Comet
}  // namespace ChatRoom
static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ChatRoom_2eComet_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ChatRoom_2eComet_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ChatRoom_2eComet_2eproto = nullptr;

const uint32_t TableStruct_ChatRoom_2eComet_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::PushMsgReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::PushMsgReq, keys_),
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::PushMsgReq, protoop_),
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::PushMsgReq, proto_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::PushMsgReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::BroadcastReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::BroadcastReq, protoop_),
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::BroadcastReq, proto_),
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::BroadcastReq, speed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::BroadcastReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::BroadcastRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::BroadcastRoomReq, roomid_),
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::BroadcastRoomReq, proto_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::BroadcastRoomReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::RoomsReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::RoomsReply_RoomsEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::RoomsReply_RoomsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::RoomsReply_RoomsEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::RoomsReply_RoomsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::RoomsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::ChatRoom::Comet::RoomsReply, rooms_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::ChatRoom::Comet::PushMsgReq)},
  { 9, -1, -1, sizeof(::ChatRoom::Comet::PushMsgReply)},
  { 15, -1, -1, sizeof(::ChatRoom::Comet::BroadcastReq)},
  { 24, -1, -1, sizeof(::ChatRoom::Comet::BroadcastReply)},
  { 30, -1, -1, sizeof(::ChatRoom::Comet::BroadcastRoomReq)},
  { 38, -1, -1, sizeof(::ChatRoom::Comet::BroadcastRoomReply)},
  { 44, -1, -1, sizeof(::ChatRoom::Comet::RoomsReq)},
  { 50, 58, -1, sizeof(::ChatRoom::Comet::RoomsReply_RoomsEntry_DoNotUse)},
  { 60, -1, -1, sizeof(::ChatRoom::Comet::RoomsReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ChatRoom::Comet::_PushMsgReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ChatRoom::Comet::_PushMsgReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ChatRoom::Comet::_BroadcastReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ChatRoom::Comet::_BroadcastReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ChatRoom::Comet::_BroadcastRoomReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ChatRoom::Comet::_BroadcastRoomReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ChatRoom::Comet::_RoomsReq_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ChatRoom::Comet::_RoomsReply_RoomsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ChatRoom::Comet::_RoomsReply_default_instance_),
};

const char descriptor_table_protodef_ChatRoom_2eComet_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024ChatRoom.Comet.proto\022\016ChatRoom.Comet\032\027"
  "ChatRoom.Protocol.proto\"T\n\nPushMsgReq\022\014\n"
  "\004keys\030\001 \003(\t\022\017\n\007protoOp\030\003 \001(\005\022\'\n\005proto\030\002 "
  "\001(\0132\030.ChatRoom.Protocol.Proto\"\016\n\014PushMsg"
  "Reply\"W\n\014BroadcastReq\022\017\n\007protoOp\030\001 \001(\005\022\'"
  "\n\005proto\030\002 \001(\0132\030.ChatRoom.Protocol.Proto\022"
  "\r\n\005speed\030\003 \001(\005\"\020\n\016BroadcastReply\"K\n\020Broa"
  "dcastRoomReq\022\016\n\006roomID\030\001 \001(\t\022\'\n\005proto\030\002 "
  "\001(\0132\030.ChatRoom.Protocol.Proto\"\024\n\022Broadca"
  "stRoomReply\"\n\n\010RoomsReq\"p\n\nRoomsReply\0224\n"
  "\005rooms\030\001 \003(\0132%.ChatRoom.Comet.RoomsReply"
  ".RoomsEntry\032,\n\nRoomsEntry\022\013\n\003key\030\001 \001(\t\022\r"
  "\n\005value\030\002 \001(\010:\0028\0012\255\002\n\005Comet\022C\n\007PushMsg\022\032"
  ".ChatRoom.Comet.PushMsgReq\032\034.ChatRoom.Co"
  "met.PushMsgReply\022I\n\tBroadcast\022\034.ChatRoom"
  ".Comet.BroadcastReq\032\036.ChatRoom.Comet.Bro"
  "adcastReply\022U\n\rBroadcastRoom\022 .ChatRoom."
  "Comet.BroadcastRoomReq\032\".ChatRoom.Comet."
  "BroadcastRoomReply\022=\n\005Rooms\022\030.ChatRoom.C"
  "omet.RoomsReq\032\032.ChatRoom.Comet.RoomsRepl"
  "yb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ChatRoom_2eComet_2eproto_deps[1] = {
  &::descriptor_table_ChatRoom_2eProtocol_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ChatRoom_2eComet_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ChatRoom_2eComet_2eproto = {
  false, false, 809, descriptor_table_protodef_ChatRoom_2eComet_2eproto, "ChatRoom.Comet.proto", 
  &descriptor_table_ChatRoom_2eComet_2eproto_once, descriptor_table_ChatRoom_2eComet_2eproto_deps, 1, 9,
  schemas, file_default_instances, TableStruct_ChatRoom_2eComet_2eproto::offsets,
  file_level_metadata_ChatRoom_2eComet_2eproto, file_level_enum_descriptors_ChatRoom_2eComet_2eproto, file_level_service_descriptors_ChatRoom_2eComet_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable* descriptor_table_ChatRoom_2eComet_2eproto_getter() {
  return &descriptor_table_ChatRoom_2eComet_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY static ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptorsRunner dynamic_init_dummy_ChatRoom_2eComet_2eproto(&descriptor_table_ChatRoom_2eComet_2eproto);
namespace ChatRoom {
namespace Comet {

// ===================================================================

class PushMsgReq::_Internal {
 public:
  static const ::ChatRoom::Protocol::Proto& proto(const PushMsgReq* msg);
};

const ::ChatRoom::Protocol::Proto&
PushMsgReq::_Internal::proto(const PushMsgReq* msg) {
  return *msg->proto_;
}
void PushMsgReq::clear_proto() {
  if (GetArenaForAllocation() == nullptr && proto_ != nullptr) {
    delete proto_;
  }
  proto_ = nullptr;
}
PushMsgReq::PushMsgReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  keys_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ChatRoom.Comet.PushMsgReq)
}
PushMsgReq::PushMsgReq(const PushMsgReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_proto()) {
    proto_ = new ::ChatRoom::Protocol::Proto(*from.proto_);
  } else {
    proto_ = nullptr;
  }
  protoop_ = from.protoop_;
  // @@protoc_insertion_point(copy_constructor:ChatRoom.Comet.PushMsgReq)
}

inline void PushMsgReq::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proto_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&protoop_) -
    reinterpret_cast<char*>(&proto_)) + sizeof(protoop_));
}

PushMsgReq::~PushMsgReq() {
  // @@protoc_insertion_point(destructor:ChatRoom.Comet.PushMsgReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void PushMsgReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete proto_;
}

void PushMsgReq::ArenaDtor(void* object) {
  PushMsgReq* _this = reinterpret_cast< PushMsgReq* >(object);
  (void)_this;
}
void PushMsgReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PushMsgReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void PushMsgReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRoom.Comet.PushMsgReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  if (GetArenaForAllocation() == nullptr && proto_ != nullptr) {
    delete proto_;
  }
  proto_ = nullptr;
  protoop_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PushMsgReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated string keys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_keys();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ChatRoom.Comet.PushMsgReq.keys"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .ChatRoom.Protocol.Proto proto = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proto(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 protoOp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          protoop_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PushMsgReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChatRoom.Comet.PushMsgReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string keys = 1;
  for (int i = 0, n = this->_internal_keys_size(); i < n; i++) {
    const auto& s = this->_internal_keys(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ChatRoom.Comet.PushMsgReq.keys");
    target = stream->WriteString(1, s, target);
  }

  // .ChatRoom.Protocol.Proto proto = 2;
  if (this->_internal_has_proto()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proto(this), target, stream);
  }

  // int32 protoOp = 3;
  if (this->_internal_protoop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_protoop(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRoom.Comet.PushMsgReq)
  return target;
}

size_t PushMsgReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRoom.Comet.PushMsgReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string keys = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(keys_.size());
  for (int i = 0, n = keys_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      keys_.Get(i));
  }

  // .ChatRoom.Protocol.Proto proto = 2;
  if (this->_internal_has_proto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proto_);
  }

  // int32 protoOp = 3;
  if (this->_internal_protoop() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_protoop());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushMsgReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    PushMsgReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushMsgReq::GetClassData() const { return &_class_data_; }

void PushMsgReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<PushMsgReq *>(to)->MergeFrom(
      static_cast<const PushMsgReq &>(from));
}


void PushMsgReq::MergeFrom(const PushMsgReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRoom.Comet.PushMsgReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
  if (from._internal_has_proto()) {
    _internal_mutable_proto()->::ChatRoom::Protocol::Proto::MergeFrom(from._internal_proto());
  }
  if (from._internal_protoop() != 0) {
    _internal_set_protoop(from._internal_protoop());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PushMsgReq::CopyFrom(const PushMsgReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRoom.Comet.PushMsgReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PushMsgReq::IsInitialized() const {
  return true;
}

void PushMsgReq::InternalSwap(PushMsgReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  keys_.InternalSwap(&other->keys_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PushMsgReq, protoop_)
      + sizeof(PushMsgReq::protoop_)
      - PROTOBUF_FIELD_OFFSET(PushMsgReq, proto_)>(
          reinterpret_cast<char*>(&proto_),
          reinterpret_cast<char*>(&other->proto_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PushMsgReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ChatRoom_2eComet_2eproto_getter, &descriptor_table_ChatRoom_2eComet_2eproto_once,
      file_level_metadata_ChatRoom_2eComet_2eproto[0]);
}

// ===================================================================

class PushMsgReply::_Internal {
 public:
};

PushMsgReply::PushMsgReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ChatRoom.Comet.PushMsgReply)
}
PushMsgReply::PushMsgReply(const PushMsgReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChatRoom.Comet.PushMsgReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PushMsgReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PushMsgReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PushMsgReply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ChatRoom_2eComet_2eproto_getter, &descriptor_table_ChatRoom_2eComet_2eproto_once,
      file_level_metadata_ChatRoom_2eComet_2eproto[1]);
}

// ===================================================================

class BroadcastReq::_Internal {
 public:
  static const ::ChatRoom::Protocol::Proto& proto(const BroadcastReq* msg);
};

const ::ChatRoom::Protocol::Proto&
BroadcastReq::_Internal::proto(const BroadcastReq* msg) {
  return *msg->proto_;
}
void BroadcastReq::clear_proto() {
  if (GetArenaForAllocation() == nullptr && proto_ != nullptr) {
    delete proto_;
  }
  proto_ = nullptr;
}
BroadcastReq::BroadcastReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ChatRoom.Comet.BroadcastReq)
}
BroadcastReq::BroadcastReq(const BroadcastReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_proto()) {
    proto_ = new ::ChatRoom::Protocol::Proto(*from.proto_);
  } else {
    proto_ = nullptr;
  }
  ::memcpy(&protoop_, &from.protoop_,
    static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&protoop_)) + sizeof(speed_));
  // @@protoc_insertion_point(copy_constructor:ChatRoom.Comet.BroadcastReq)
}

inline void BroadcastReq::SharedCtor() {
::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
    reinterpret_cast<char*>(&proto_) - reinterpret_cast<char*>(this)),
    0, static_cast<size_t>(reinterpret_cast<char*>(&speed_) -
    reinterpret_cast<char*>(&proto_)) + sizeof(speed_));
}

BroadcastReq::~BroadcastReq() {
  // @@protoc_insertion_point(destructor:ChatRoom.Comet.BroadcastReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BroadcastReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete proto_;
}

void BroadcastReq::ArenaDtor(void* object) {
  BroadcastReq* _this = reinterpret_cast< BroadcastReq* >(object);
  (void)_this;
}
void BroadcastReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BroadcastReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BroadcastReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRoom.Comet.BroadcastReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && proto_ != nullptr) {
    delete proto_;
  }
  proto_ = nullptr;
  ::memset(&protoop_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&speed_) -
      reinterpret_cast<char*>(&protoop_)) + sizeof(speed_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 protoOp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          protoop_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ChatRoom.Protocol.Proto proto = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proto(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 speed = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          speed_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BroadcastReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChatRoom.Comet.BroadcastReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 protoOp = 1;
  if (this->_internal_protoop() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_protoop(), target);
  }

  // .ChatRoom.Protocol.Proto proto = 2;
  if (this->_internal_has_proto()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proto(this), target, stream);
  }

  // int32 speed = 3;
  if (this->_internal_speed() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_speed(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRoom.Comet.BroadcastReq)
  return target;
}

size_t BroadcastReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRoom.Comet.BroadcastReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .ChatRoom.Protocol.Proto proto = 2;
  if (this->_internal_has_proto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proto_);
  }

  // int32 protoOp = 1;
  if (this->_internal_protoop() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_protoop());
  }

  // int32 speed = 3;
  if (this->_internal_speed() != 0) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32SizePlusOne(this->_internal_speed());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BroadcastReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastReq::GetClassData() const { return &_class_data_; }

void BroadcastReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BroadcastReq *>(to)->MergeFrom(
      static_cast<const BroadcastReq &>(from));
}


void BroadcastReq::MergeFrom(const BroadcastReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRoom.Comet.BroadcastReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_proto()) {
    _internal_mutable_proto()->::ChatRoom::Protocol::Proto::MergeFrom(from._internal_proto());
  }
  if (from._internal_protoop() != 0) {
    _internal_set_protoop(from._internal_protoop());
  }
  if (from._internal_speed() != 0) {
    _internal_set_speed(from._internal_speed());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BroadcastReq::CopyFrom(const BroadcastReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRoom.Comet.BroadcastReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastReq::IsInitialized() const {
  return true;
}

void BroadcastReq::InternalSwap(BroadcastReq* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BroadcastReq, speed_)
      + sizeof(BroadcastReq::speed_)
      - PROTOBUF_FIELD_OFFSET(BroadcastReq, proto_)>(
          reinterpret_cast<char*>(&proto_),
          reinterpret_cast<char*>(&other->proto_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ChatRoom_2eComet_2eproto_getter, &descriptor_table_ChatRoom_2eComet_2eproto_once,
      file_level_metadata_ChatRoom_2eComet_2eproto[2]);
}

// ===================================================================

class BroadcastReply::_Internal {
 public:
};

BroadcastReply::BroadcastReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ChatRoom.Comet.BroadcastReply)
}
BroadcastReply::BroadcastReply(const BroadcastReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChatRoom.Comet.BroadcastReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BroadcastReply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ChatRoom_2eComet_2eproto_getter, &descriptor_table_ChatRoom_2eComet_2eproto_once,
      file_level_metadata_ChatRoom_2eComet_2eproto[3]);
}

// ===================================================================

class BroadcastRoomReq::_Internal {
 public:
  static const ::ChatRoom::Protocol::Proto& proto(const BroadcastRoomReq* msg);
};

const ::ChatRoom::Protocol::Proto&
BroadcastRoomReq::_Internal::proto(const BroadcastRoomReq* msg) {
  return *msg->proto_;
}
void BroadcastRoomReq::clear_proto() {
  if (GetArenaForAllocation() == nullptr && proto_ != nullptr) {
    delete proto_;
  }
  proto_ = nullptr;
}
BroadcastRoomReq::BroadcastRoomReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ChatRoom.Comet.BroadcastRoomReq)
}
BroadcastRoomReq::BroadcastRoomReq(const BroadcastRoomReq& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  roomid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    roomid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_roomid().empty()) {
    roomid_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_roomid(), 
      GetArenaForAllocation());
  }
  if (from._internal_has_proto()) {
    proto_ = new ::ChatRoom::Protocol::Proto(*from.proto_);
  } else {
    proto_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:ChatRoom.Comet.BroadcastRoomReq)
}

inline void BroadcastRoomReq::SharedCtor() {
roomid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  roomid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
proto_ = nullptr;
}

BroadcastRoomReq::~BroadcastRoomReq() {
  // @@protoc_insertion_point(destructor:ChatRoom.Comet.BroadcastRoomReq)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void BroadcastRoomReq::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  roomid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete proto_;
}

void BroadcastRoomReq::ArenaDtor(void* object) {
  BroadcastRoomReq* _this = reinterpret_cast< BroadcastRoomReq* >(object);
  (void)_this;
}
void BroadcastRoomReq::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void BroadcastRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void BroadcastRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRoom.Comet.BroadcastRoomReq)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && proto_ != nullptr) {
    delete proto_;
  }
  proto_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BroadcastRoomReq::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string roomID = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_roomid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ChatRoom.Comet.BroadcastRoomReq.roomID"));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .ChatRoom.Protocol.Proto proto = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_proto(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BroadcastRoomReq::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChatRoom.Comet.BroadcastRoomReq)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string roomID = 1;
  if (!this->_internal_roomid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_roomid().data(), static_cast<int>(this->_internal_roomid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ChatRoom.Comet.BroadcastRoomReq.roomID");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_roomid(), target);
  }

  // .ChatRoom.Protocol.Proto proto = 2;
  if (this->_internal_has_proto()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::proto(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRoom.Comet.BroadcastRoomReq)
  return target;
}

size_t BroadcastRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRoom.Comet.BroadcastRoomReq)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string roomID = 1;
  if (!this->_internal_roomid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_roomid());
  }

  // .ChatRoom.Protocol.Proto proto = 2;
  if (this->_internal_has_proto()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *proto_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastRoomReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    BroadcastRoomReq::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastRoomReq::GetClassData() const { return &_class_data_; }

void BroadcastRoomReq::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<BroadcastRoomReq *>(to)->MergeFrom(
      static_cast<const BroadcastRoomReq &>(from));
}


void BroadcastRoomReq::MergeFrom(const BroadcastRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRoom.Comet.BroadcastRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_roomid().empty()) {
    _internal_set_roomid(from._internal_roomid());
  }
  if (from._internal_has_proto()) {
    _internal_mutable_proto()->::ChatRoom::Protocol::Proto::MergeFrom(from._internal_proto());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BroadcastRoomReq::CopyFrom(const BroadcastRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRoom.Comet.BroadcastRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BroadcastRoomReq::IsInitialized() const {
  return true;
}

void BroadcastRoomReq::InternalSwap(BroadcastRoomReq* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      &roomid_, lhs_arena,
      &other->roomid_, rhs_arena
  );
  swap(proto_, other->proto_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BroadcastRoomReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ChatRoom_2eComet_2eproto_getter, &descriptor_table_ChatRoom_2eComet_2eproto_once,
      file_level_metadata_ChatRoom_2eComet_2eproto[4]);
}

// ===================================================================

class BroadcastRoomReply::_Internal {
 public:
};

BroadcastRoomReply::BroadcastRoomReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ChatRoom.Comet.BroadcastRoomReply)
}
BroadcastRoomReply::BroadcastRoomReply(const BroadcastRoomReply& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChatRoom.Comet.BroadcastRoomReply)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BroadcastRoomReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BroadcastRoomReply::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata BroadcastRoomReply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ChatRoom_2eComet_2eproto_getter, &descriptor_table_ChatRoom_2eComet_2eproto_once,
      file_level_metadata_ChatRoom_2eComet_2eproto[5]);
}

// ===================================================================

class RoomsReq::_Internal {
 public:
};

RoomsReq::RoomsReq(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:ChatRoom.Comet.RoomsReq)
}
RoomsReq::RoomsReq(const RoomsReq& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ChatRoom.Comet.RoomsReq)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomsReq::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomsReq::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata RoomsReq::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ChatRoom_2eComet_2eproto_getter, &descriptor_table_ChatRoom_2eComet_2eproto_once,
      file_level_metadata_ChatRoom_2eComet_2eproto[6]);
}

// ===================================================================

RoomsReply_RoomsEntry_DoNotUse::RoomsReply_RoomsEntry_DoNotUse() {}
RoomsReply_RoomsEntry_DoNotUse::RoomsReply_RoomsEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RoomsReply_RoomsEntry_DoNotUse::MergeFrom(const RoomsReply_RoomsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RoomsReply_RoomsEntry_DoNotUse::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ChatRoom_2eComet_2eproto_getter, &descriptor_table_ChatRoom_2eComet_2eproto_once,
      file_level_metadata_ChatRoom_2eComet_2eproto[7]);
}

// ===================================================================

class RoomsReply::_Internal {
 public:
};

RoomsReply::RoomsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  rooms_(arena) {
  SharedCtor();
  if (!is_message_owned) {
    RegisterArenaDtor(arena);
  }
  // @@protoc_insertion_point(arena_constructor:ChatRoom.Comet.RoomsReply)
}
RoomsReply::RoomsReply(const RoomsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rooms_.MergeFrom(from.rooms_);
  // @@protoc_insertion_point(copy_constructor:ChatRoom.Comet.RoomsReply)
}

inline void RoomsReply::SharedCtor() {
}

RoomsReply::~RoomsReply() {
  // @@protoc_insertion_point(destructor:ChatRoom.Comet.RoomsReply)
  if (GetArenaForAllocation() != nullptr) return;
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

inline void RoomsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RoomsReply::ArenaDtor(void* object) {
  RoomsReply* _this = reinterpret_cast< RoomsReply* >(object);
  (void)_this;
  _this->rooms_. ~MapField();
}
inline void RoomsReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena) {
  if (arena != nullptr) {
    arena->OwnCustomDestructor(this, &RoomsReply::ArenaDtor);
  }
}
void RoomsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void RoomsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:ChatRoom.Comet.RoomsReply)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rooms_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RoomsReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, bool> rooms = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&rooms_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RoomsReply::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ChatRoom.Comet.RoomsReply)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bool> rooms = 1;
  if (!this->_internal_rooms().empty()) {
    typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, bool >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::PROTOBUF_NAMESPACE_ID::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        (void)p;
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
          "ChatRoom.Comet.RoomsReply.RoomsEntry.key");
      }
    };

    if (stream->IsSerializationDeterministic() &&
        this->_internal_rooms().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->_internal_rooms().size()]);
      typedef ::PROTOBUF_NAMESPACE_ID::Map< std::string, bool >::size_type size_type;
      size_type n = 0;
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, bool >::const_iterator
          it = this->_internal_rooms().begin();
          it != this->_internal_rooms().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      for (size_type i = 0; i < n; i++) {
        target = RoomsReply_RoomsEntry_DoNotUse::Funcs::InternalSerialize(1, items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second, target, stream);
        Utf8Check::Check(&(*items[static_cast<ptrdiff_t>(i)]));
      }
    } else {
      for (::PROTOBUF_NAMESPACE_ID::Map< std::string, bool >::const_iterator
          it = this->_internal_rooms().begin();
          it != this->_internal_rooms().end(); ++it) {
        target = RoomsReply_RoomsEntry_DoNotUse::Funcs::InternalSerialize(1, it->first, it->second, target, stream);
        Utf8Check::Check(&(*it));
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChatRoom.Comet.RoomsReply)
  return target;
}

size_t RoomsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChatRoom.Comet.RoomsReply)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, bool> rooms = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_rooms_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, bool >::const_iterator
      it = this->_internal_rooms().begin();
      it != this->_internal_rooms().end(); ++it) {
    total_size += RoomsReply_RoomsEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RoomsReply::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    RoomsReply::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RoomsReply::GetClassData() const { return &_class_data_; }

void RoomsReply::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<RoomsReply *>(to)->MergeFrom(
      static_cast<const RoomsReply &>(from));
}


void RoomsReply::MergeFrom(const RoomsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChatRoom.Comet.RoomsReply)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  rooms_.MergeFrom(from.rooms_);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RoomsReply::CopyFrom(const RoomsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChatRoom.Comet.RoomsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomsReply::IsInitialized() const {
  return true;
}

void RoomsReply::InternalSwap(RoomsReply* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  rooms_.InternalSwap(&other->rooms_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RoomsReply::GetMetadata() const {
  return ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(
      &descriptor_table_ChatRoom_2eComet_2eproto_getter, &descriptor_table_ChatRoom_2eComet_2eproto_once,
      file_level_metadata_ChatRoom_2eComet_2eproto[8]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace Comet
}  // namespace ChatRoom
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ChatRoom::Comet::PushMsgReq* Arena::CreateMaybeMessage< ::ChatRoom::Comet::PushMsgReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChatRoom::Comet::PushMsgReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ChatRoom::Comet::PushMsgReply* Arena::CreateMaybeMessage< ::ChatRoom::Comet::PushMsgReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChatRoom::Comet::PushMsgReply >(arena);
}
template<> PROTOBUF_NOINLINE ::ChatRoom::Comet::BroadcastReq* Arena::CreateMaybeMessage< ::ChatRoom::Comet::BroadcastReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChatRoom::Comet::BroadcastReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ChatRoom::Comet::BroadcastReply* Arena::CreateMaybeMessage< ::ChatRoom::Comet::BroadcastReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChatRoom::Comet::BroadcastReply >(arena);
}
template<> PROTOBUF_NOINLINE ::ChatRoom::Comet::BroadcastRoomReq* Arena::CreateMaybeMessage< ::ChatRoom::Comet::BroadcastRoomReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChatRoom::Comet::BroadcastRoomReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ChatRoom::Comet::BroadcastRoomReply* Arena::CreateMaybeMessage< ::ChatRoom::Comet::BroadcastRoomReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChatRoom::Comet::BroadcastRoomReply >(arena);
}
template<> PROTOBUF_NOINLINE ::ChatRoom::Comet::RoomsReq* Arena::CreateMaybeMessage< ::ChatRoom::Comet::RoomsReq >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChatRoom::Comet::RoomsReq >(arena);
}
template<> PROTOBUF_NOINLINE ::ChatRoom::Comet::RoomsReply_RoomsEntry_DoNotUse* Arena::CreateMaybeMessage< ::ChatRoom::Comet::RoomsReply_RoomsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChatRoom::Comet::RoomsReply_RoomsEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::ChatRoom::Comet::RoomsReply* Arena::CreateMaybeMessage< ::ChatRoom::Comet::RoomsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ChatRoom::Comet::RoomsReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
