version: "3.8"
services:
  zookeeper:
    image: ${REGISTRY_SERVER}/${REGISTRY_NAMESPACE}/my_project-zookeeper:3.9.2
    container_name: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"
      JVMFLAGS: "-Xmx128m -Xms128m"
    restart: unless-stopped

  kafka:
    image: ${REGISTRY_SERVER}/${REGISTRY_NAMESPACE}/my_project-kafka:3.7
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_started
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_ENABLE_KRAFT: "no"
      KAFKA_CFG_ZOOKEEPER_SESSION_TIMEOUT_MS: "60000"
      KAFKA_CFG_ZOOKEEPER_CONNECTION_TIMEOUT_MS: "30000"
      KAFKA_HEAP_OPTS: "-Xmx256m -Xms256m"
    restart: unless-stopped

  redis:
    image: ${REGISTRY_SERVER}/${REGISTRY_NAMESPACE}/my_project-redis:6.0.16
    container_name: redis
    command: redis-server --appendonly yes

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 12
    restart: unless-stopped

  mysql:
    image: ${REGISTRY_SERVER}/${REGISTRY_NAMESPACE}/my_project-mysql:8.0.37
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: myself_chatroom
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p123 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    restart: unless-stopped

  logic-app:
    image: ${REGISTRY_SERVER}/${REGISTRY_NAMESPACE}/my_project-logic-app:latest
    container_name: logic-app
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    restart: unless-stopped

  job-app:
    image: ${REGISTRY_SERVER}/${REGISTRY_NAMESPACE}/my_project-job-app:latest
    container_name: job-app
    depends_on:
      redis:
        condition: service_healthy
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    restart: unless-stopped

  chatroom-app:
    image: ${REGISTRY_SERVER}/${REGISTRY_NAMESPACE}/my_project-chatroom-app:latest
    container_name: chatroom-app
    depends_on:
      logic-app:
        condition: service_started
    restart: unless-stopped

  web-frontend:
    image: ${REGISTRY_SERVER}/${REGISTRY_NAMESPACE}/my_project-web-frontend:latest
    container_name: web-frontend
    environment:
      SERVER_BASE_URL: http://chatroom-app:8080
    depends_on:
      chatroom-app:
        condition: service_started
    restart: unless-stopped

  nginx:
    image: nginx:1.21-alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      web-frontend:
        condition: service_started
      chatroom-app:
        condition: service_started
    restart: unless-stopped
