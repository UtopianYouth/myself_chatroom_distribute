events {}

http {
    # 定义上游服务，即我们的后端和前端应用
    # Docker Compose 会自动将服务名解析为正确的容器 IP
    upstream backend_service {
        server chatroom-app:8080;
    }

    upstream frontend_service {
        server web-frontend:3000;
    }

    server {
        # Nginx 监听 80 端口，作为唯一的公网入口
        listen 80;

        # 规则一：处理所有 API 请求 (包括 WebSocket)
        # 当请求路径以 /api/ 开头时，此规则生效
        location /api/ {
            # 将请求转发给后端服务
            proxy_pass http://backend_service;
            
            # --- 以下是代理 WebSocket 连接所必需的头信息 ---
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
        }

        # 规则二：处理所有其他请求 (访问网页)
        # 当请求路径不匹配上面的规则时，此规则生效
        location / {
            # 将请求转发给前端 Next.js 应用
            proxy_pass http://frontend_service;
            proxy_set_header Host $host;
        }
    }
}